What is Object Oriented Programmig : 
_____________________________________

It is an approach that provides a way of modularizing programming, that which can be used to create 
small partition memory area for both data and objects, which are to be used as 
template for creating copies of such modules on demand. 

Object : 

  An object is a real world entity, that which possess 3 characterstics known as

	(i) State

	(ii) Behaviour

	(iii) Identity 

Object Oriented Programming Features : 
________________________________________


	(i) Encapsulation : Wrapping up of data and functions into a single unit.

	(ii) Abstraction  : Hiding the irrelevant details of object that do not contribute to its essential
		characterstics known as Abstraction. 

		*** Encapsulation focuses on showing the relevant details, where abstraction focuses on
		hiding the irrelevant details ***

	(iii) Inheritnace : Deriving a new entity from already existing entity known as inheritance. 
		Through inheritance, we can reduce the size of the program. 

	(iv) Polymorphism : The ability to take more than one form known as polymorphism. 

class : A class is a template or blueprint, that which contains the combination of data members
	and member functions. Members of the class can be accessable by using the instance of the class. 

class class_name
{
    data members;
    member functions;
}

Why Java : 
___________

(i) Platform Independence : Write Once and Run anywhere. 

(ii) Console Applications

(iii) Windows Applications

(iv) Web Applications

(v) Mobile Applications 

(vi) Packages : Contains group of related classes and interfaces that which belongs to one common group. If you want to overcome the naming conflicts between classes, then we need the help of packages. 

Java Features : 
________________

	(i) Simple : Java uses simple C/C++ syntaxes, as a programmer no needs to take care of 
	internal details like memory management etc... as how much memory allocated
		to run the program the same amount of memory will be reallocated 
		automatically. 

	(ii) Object Oriented : Java supports all object oriented programming features.

	(iii) Compiled and Interpreted : Java programs are compiled first, during compilation java code
		will be converted into bytecode, then .class file will be created. In interpretation it 
		reads the bytecode line by line and executes. 

	 (iv) Portable : Ability to run the program without changing the source code. Java programs are 
		programs that can run on any env. without changing the source code.

	(v) Securable : Java implements different levels of security as 

		(i) Compiler Level security

		(ii) Bytecode Level

		(iii) Class Loader Level 

	(vi) Distributed : By using java, we can implement all distributed and robust applications. 

Java Architecture : 
_____________________


	(i) Java Program (Java code that which stored with extension .java)

	(ii) Java Class (Java Code after compilation its converted into bytecode, then .class file will be
		created)

	(iii) JVM (Java Virtual Machine) 

		It contains various components as 

			(a) Class Loader : Used to load all classes which are required to run the program. 
		There are 2 types of class loaders known as 
				
				(i) Primordial Class Loader : Used to load all system classes which are reqd
			to run the program. 

				(ii) Class Loader Objects : Used to load all custom classes which are reqd
			to run the program. 

			(b) JIT Compiler : Used to convert bytecode into CPU specific format. 

			(c) Execution Manager : Contains QUEUE of programs which are ready to run, where we 
			can execute the program. 

		*** Before execution, it needs to undergone the security authentication ***

	(iv) Java API : It provides runtime env, that which allows you to run the java program. 


Data Types : 
____________

There are 2 types of data types as 

	(i) value types

		int, float, double, char, boolean 

	(ii) reference types 

		String, Object and Custom Objects. 

*** Value types will be stored in STACK memory, and reference types will be stored in HEAP memory ***

System.out.println() : used to display any value or message. 

System -> Class
out -> Console
println() -> method. 

System.out.println("Welcome to Java Programming...");

In java, we can define method main() as 

public static void main(String[] args) {
...
...
...
}

Access Modifiers : 
__________________

(i) private : Allows you to access members within current class. 

(ii) public : Allows you to access members in entire application. 

(iii) protected : Allows you to access members within current and derived class.

(iv) friendly : By default java possess friendly access modifier, allows you to access members in all classes
		of current package. 


You can create an object to the class as 

class_name obj = new class_name();

Control Structures : 
_____________________

Used to define the flow of the program. 

There are various types of control structures known as 

	(i) Branching

	if...else : 

		Executes the statements based on the condition. 

	  if (condition) {
		statement(s);
	  } else {
		statement(s);
	  }


	switch...case : Used to implement menu-driven programs. 

	switch(expr) {
	   case expr1 :
		statement(s);
		break;
	   case expr2 : 
		statement(s);
		break;
	   case expr3 : 
		statement(s);
		break;
	....
	....
	....
	   default :
		.....
		break;
	}

	(ii) Looping 

	   while loop : This loop executes all the statements repeatedly until the condition remains true, 
if the condition remains false, then it comes out of the loop. 

for every loop, basically there are 3 phases as 

	(i) Initialization : Perfomed at the beginning of the loop.

	(ii) Condition : Performed at the conditional part of the loop.

	(iii) Increment/Decrement : Performed before closing the loop.

while(condition) {
   statement(s);
  ...
}

for loop : This loop executes all the statements repeateldy until the condition
remains true, if the condition remains false, then it comes out of the loop. 

for(initialization;condition;increment/decrement) {
	statement(s);
}

Arrays : 
________

An array is the finite ordered set of homogeneous elements, means 
all the elements belongs to same data type. 

int[] a = new int[]{1,5,22,35};

a[0]=1;
a[1]=5;
a[2]=22;
a[3]=35;


int[] a = new int[] {1,55,23,22,88,90};
//		for(int i=0;i<a.length;i++) {
//			System.out.println(a[i]);
//		}
		for (int i : a) {
			System.out.println(i);
		}

foreach loop implements the Enumeration collection, at first i points to the 
first Element in Array A, after processing first Element, it checks next element
is there or not by using hasMoreElements(), if hasMoreElements() returns true,
then it moves to next element by using nextElement(), it repeats as soon as
hasMoreElements() returns true. 

In java, strings are immutable, means once they are assigned we cannot change the value by using 
any string methods. 


There are 2 types of memories as 

	(i) STACK
	(ii) HEAP

value types will be stored in STACK memory and reference types will be 
stored in HEAP memory. 




















































































